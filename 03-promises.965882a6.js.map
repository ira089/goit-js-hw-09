{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAI,CAAEM,SAAAT,EAAUU,MAAAT,IAEhBG,EAAI,CAAEK,SAAAT,EAAUU,MAAAT,G,GAEjBA,E,IAIP,IAAMU,EAAO,CACXC,aAAcC,SAASC,cAAc,UACrCC,KAAMF,SAASC,cAAc,SAC7BE,WAAYH,SAASC,cAAc,uBACnCG,UAAWJ,SAASC,cAAc,sBAClCI,YAAaL,SAASC,cAAc,yBAKtCH,EAAKC,aAAaO,iBAAiB,SAEnC,SAAiBC,GACfA,EAAIC,iBAOJ,IAJA,IAAMC,EAAOC,OAAOZ,EAAKM,UAAUO,OAC7BC,EAASF,OAAOZ,EAAKO,YAAYM,OACjCE,EAAaH,OAAOZ,EAAKK,WAAWQ,OAEjCG,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAK/B5B,EAJW4B,EAAI,EACPD,EAAaJ,EAAOK,GAIzBC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARpB,SAAUsB,EAAKF,EAALnB,MACjBb,EAAAmC,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE9DI,OAAM,SAAAN,G,IAAGO,EAAQP,EAARpB,SAAU4B,EAAKR,EAALnB,MAClBb,EAAAmC,OAAOC,QAAQ,sBAAqCC,OAAfE,EAAS,QAAYF,OAANG,EAAM,M,IAIhE1B,EAAKI,KAAKuB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet position = 0;\nlet delay = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  starPromises: document.querySelector('button'),\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n};\n// console.dir(refs.starPromises);\n// console.dir(refs.form);\n\nrefs.starPromises.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n  evt.preventDefault();\n  // refs.starPromises.disabled = true;\n\n  const step = Number(refs.stepInput.value);\n  const amount = Number(refs.amountInput.value);\n  const delayStart = Number(refs.delayInput.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    position = i + 1;\n    delay = delayStart + step * i;\n    // console.log(delay);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.success(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n  refs.form.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","res","rej","shouldResolve","Math","random","setTimeout","position","delay","$ce04d3a99e08e73b$var$refs","starPromises","document","querySelector","form","delayInput","stepInput","amountInput","addEventListener","evt","preventDefault","step","Number","value","amount","delayStart","i","then","param","position2","delay2","Notify","success","concat","catch","position3","delay3","reset"],"version":3,"file":"03-promises.965882a6.js.map"}