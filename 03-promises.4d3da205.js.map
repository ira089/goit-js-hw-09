{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,IAAIC,EAAW,EACXC,EAAQ,EAEZ,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAI,CAAEM,SAAAT,EAAUU,MAAAT,IAEhBG,EAAI,CAAEK,SAAAT,EAAUU,MAAAT,GAAQ,GAEzBA,EAAM,G,CAVbU,QAAQC,IAAI,OAcZ,MAAMC,EAAO,CACXC,aAAcC,SAASC,cAAc,UACrCC,KAAMF,SAASC,cAAc,SAC7BE,WAAYH,SAASC,cAAc,uBACnCG,UAAWJ,SAASC,cAAc,sBAClCI,YAAaL,SAASC,cAAc,yBAItCH,EAAKC,aAAaO,iBAAiB,SAEnC,SAAiBC,GACfA,EAAIC,iBACJV,EAAKC,aAAaU,UAAW,EAE7B,MAAMC,EAAOC,OAAOb,EAAKM,UAAUQ,OAC7BC,EAASF,OAAOb,EAAKO,YAAYO,OACjCE,EAAaH,OAAOb,EAAKK,WAAWS,OAE1C,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC/BjC,EAAWiC,EAAI,EACfhC,EAAQ+B,EAAaJ,EAAOK,EAG5B/B,EAAcF,EAAUC,GACrBiC,MAAK,EAAGtB,SAAAuB,EAAUtB,MAAAuB,MACjBtC,EAAAuC,OAAOC,QAAQ,uBAAqBH,QAAiBC,MAAU,IAEhEG,OAAM,EAAG3B,SAAA4B,EAAU3B,MAAA4B,MAClB3C,EAAAuC,OAAOC,QAAQ,sBAAoBE,QAAeC,MAAU,IAIlEzB,EAAKC,aAAaU,UAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet position = 0;\nlet delay = 0;\nconsole.log('eha');\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  starPromises: document.querySelector('button'),\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n};\n// console.dir(refs.starPromises);\n// console.dir(refs.form);\nrefs.starPromises.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n  evt.preventDefault();\n  refs.starPromises.disabled = true;\n\n  const step = Number(refs.stepInput.value);\n  const amount = Number(refs.amountInput.value);\n  const delayStart = Number(refs.delayInput.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    position = i + 1;\n    delay = delayStart + step * i;\n    // console.log(delay);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.success(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  // refs.form.reset();\n  refs.starPromises.disabled = false;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$position","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","res","rej","shouldResolve","Math","random","setTimeout","position","delay","console","log","$47d4ff9957288465$var$refs","starPromises","document","querySelector","form","delayInput","stepInput","amountInput","addEventListener","evt","preventDefault","disabled","step","Number","value","amount","delayStart","i","then","position2","delay2","Notify","success","catch","position3","delay3"],"version":3,"file":"03-promises.4d3da205.js.map"}